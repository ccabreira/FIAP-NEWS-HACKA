const API_URL = "https://fiap-news-api.onrender.com/api";

// üîπ Login do usu√°rio
export const loginUser = async (email, password) => {
  try {
    const response = await fetch(`${API_URL}/auth/login`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ email, password }),
    });

    if (!response.ok) {
      throw new Error("Erro ao fazer login. Verifique suas credenciais.");
    }

    const data = await response.json();
    return data.token;
  } catch (error) {
    console.error("Erro no login:", error);
    return null;
  }
};

// üîπ Cadastro do usu√°rio
export const registerUser = async (name, email, password) => {
  try {
    const response = await fetch(`${API_URL}/users/register`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ name, email, password }),
    });

    if (!response.ok) {
      throw new Error("Erro ao registrar usu√°rio.");
    }

    return await response.json();
  } catch (error) {
    console.error("Erro no registro:", error);
    return { error: "Erro ao registrar usu√°rio." };
  }
};

// üîπ Buscar todas as not√≠cias
export const getNews = async () => {
  try {
    console.log("Buscando not√≠cias de:", API_URL);
    const response = await fetch(`${API_URL}/news`);
    
    if (!response.ok) {
      console.error("Erro ao buscar not√≠cias:", response.status, response.statusText);
      throw new Error("Erro ao buscar not√≠cias");
    }

    const data = await response.json();
    console.log("Not√≠cias recebidas:", data);
    return data;
  } catch (error) {
    console.error("Erro ao carregar not√≠cias:", error);
    return [];
  }
};

// üîπ Buscar not√≠cia por ID
export const getNewsById = async (id) => {
  try {
    const response = await fetch(`${API_URL}/news/${id}`);

    if (!response.ok) {
      throw new Error("Not√≠cia n√£o encontrada.");
    }

    return await response.json();
  } catch (error) {
    console.error("Erro ao buscar not√≠cia:", error);
    return null;
  }
};

// üîπ Criar uma nova not√≠cia (agora recebe um objeto √∫nico)
export const createNews = async (newsData) => {
  try {
    const response = await fetch(`${API_URL}/news`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(newsData),
    });

    if (!response.ok) {
      throw new Error("Erro ao criar not√≠cia.");
    }

    return await response.json();
  } catch (error) {
    console.error("Erro ao criar not√≠cia:", error);
    return { error: "Erro ao criar not√≠cia." };
  }
};

// üîπ Atualizar uma not√≠cia existente (tamb√©m recebe um objeto √∫nico)
export const updateNews = async (id, newsData) => {
  try {
    const response = await fetch(`${API_URL}/news/${id}`, {
      method: "PUT",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(newsData),
    });

    if (!response.ok) {
      throw new Error("Erro ao atualizar not√≠cia.");
    }

    return await response.json();
  } catch (error) {
    console.error("Erro ao atualizar not√≠cia:", error);
    return { error: "Erro ao atualizar not√≠cia." };
  }
};

// üîπ Deletar uma not√≠cia
export const deleteNews = async (id) => {
  try {
    const response = await fetch(`${API_URL}/news/${id}`, { method: "DELETE" });

    if (!response.ok) {
      throw new Error("Erro ao excluir not√≠cia.");
    }

    return { message: "Not√≠cia exclu√≠da com sucesso." };
  } catch (error) {
    console.error("Erro ao excluir not√≠cia:", error);
    return { error: "Erro ao excluir not√≠cia." };
  }
};
